plugins {
    id 'java'
    id 'org.openrewrite.rewrite' version '6.8.2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.micronaut.application' version '4.3.2'
    id 'io.micronaut.test-resources' version '4.3.1'
}

version = '0.1'
group = 'example.micronaut'

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    annotationProcessor('io.micronaut:micronaut-http-validation:4.3.7')
    annotationProcessor('io.micronaut.serde:micronaut-serde-processor:2.8.1')
    implementation('io.micronaut:micronaut-http-client:4.3.7')
    implementation('io.micronaut.kafka:micronaut-kafka:5.3.0')
    implementation('io.micronaut.kafka:micronaut-kafka-streams:5.3.0')
    implementation('io.micronaut.reactor:micronaut-reactor:3.2.1')
    implementation('io.micronaut.reactor:micronaut-reactor-http-client:3.2.1')
    implementation('io.micronaut.serde:micronaut-serde-jackson:2.8.1')
    runtimeOnly('ch.qos.logback:logback-classic:1.5.0')

    runtimeOnly('org.yaml:snakeyaml:2.2')
    implementation('org.apache.commons:commons-compress:1.25.0')
    implementation('io.micronaut.testresources:micronaut-test-resources-testcontainers:2.3.3')

    testImplementation('com.sun.xml.ws:jaxws-rt:4.0.2')
    testImplementation('org.glassfish.jaxb:jaxb-runtime:4.0.4')
    testImplementation("io.micronaut:micronaut-http-client:4.3.7")
    testImplementation("org.testcontainers:junit-jupiter:1.19.5")
    testImplementation("org.testcontainers:testcontainers:1.19.5")
    testImplementation("io.micronaut:micronaut-http-netty:4.3.7")

    // OpenReWrite
    rewrite(platform('org.openrewrite.recipe:rewrite-recipe-bom:2.6.4'))
    rewrite('org.openrewrite.recipe:rewrite-micronaut:2.2.3')
}

application {
    mainClass.set('example.micronaut.Application')
}
java {
    sourceCompatibility = JavaVersion.toVersion('17')
    targetCompatibility = JavaVersion.toVersion('17')
}

rewrite {
    activeRecipe('org.openrewrite.java.micronaut.Micronaut3to4Migration')
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime('netty')
    testRuntime('junit5')
    processing {
        incremental(true)
        annotations('example.micronaut.*')
    }
    testResources {
        sharedServer = true
    }
}
